{
  "Description": "Application Load Balancer with domain-based routing for Yoga-GO",
  "Resources": {
    "YogaGoAlbSecurityGroupB8340205": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for Yoga-GO Application Load Balancer",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTP traffic",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "production"
          },
          {
            "Key": "ManagedBy",
            "Value": "CDK"
          },
          {
            "Key": "Project",
            "Value": "yoga-go"
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "YogaGoNetworkStack:ExportsOutputRefYogaGoVpcF15D70276593FDC4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "YogaGoLoadBalancerStack/YogaGoAlbSecurityGroup/Resource"
      }
    },
    "YogaGoLoadBalancer54F22CF3": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Name": "yoga-go-alb",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": ["YogaGoAlbSecurityGroupB8340205", "GroupId"]
          }
        ],
        "Subnets": [
          {
            "Fn::ImportValue": "YogaGoNetworkStack:ExportsOutputRefYogaGoVpcPublicSubnet1SubnetD3F314A23F3D8C9E"
          },
          {
            "Fn::ImportValue": "YogaGoNetworkStack:ExportsOutputRefYogaGoVpcPublicSubnet2SubnetB712836A30A7A460"
          }
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "production"
          },
          {
            "Key": "ManagedBy",
            "Value": "CDK"
          },
          {
            "Key": "Project",
            "Value": "yoga-go"
          }
        ],
        "Type": "application"
      },
      "Metadata": {
        "aws:cdk:path": "YogaGoLoadBalancerStack/YogaGoLoadBalancer/Resource"
      }
    },
    "YogaGoLoadBalancerHttpListener332678E8": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "YogaGoTargetGroupC2485A7A"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "YogaGoLoadBalancer54F22CF3"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "YogaGoLoadBalancerStack/YogaGoLoadBalancer/HttpListener/Resource"
      }
    },
    "YogaGoTargetGroupC2485A7A": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/api/health",
        "HealthCheckTimeoutSeconds": 10,
        "HealthyThresholdCount": 2,
        "Matcher": {
          "HttpCode": "200"
        },
        "Port": 3000,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "production"
          },
          {
            "Key": "ManagedBy",
            "Value": "CDK"
          },
          {
            "Key": "Project",
            "Value": "yoga-go"
          }
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30"
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 3,
        "VpcId": {
          "Fn::ImportValue": "YogaGoNetworkStack:ExportsOutputRefYogaGoVpcF15D70276593FDC4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "YogaGoLoadBalancerStack/YogaGoTargetGroup/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VOSw6CMBA9C3sYsXoBdeHGxETcm6FUMlBb0k4hhvTuBn+B1fvm5QkQYg15goPPZNVmmkoYC0bZpjj426ikgLFQMjji59HZ0KWHu1kYMVUaPZPUFqsSNRpJpu4FjLuu0ySRyZqTxWr/zpSbFhZ63iPPynw7Pz7Lr+hqxf8jMxnjZJwDd4FjamyloPGrXmxhA3nSeKLMBcP0UHD54AtbJWit/AAAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "YogaGoLoadBalancerStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "LoadBalancerDnsName": {
      "Description": "Load Balancer DNS Name",
      "Value": {
        "Fn::GetAtt": ["YogaGoLoadBalancer54F22CF3", "DNSName"]
      },
      "Export": {
        "Name": "yoga-go-alb-dns"
      }
    },
    "LoadBalancerArn": {
      "Description": "Load Balancer ARN",
      "Value": {
        "Ref": "YogaGoLoadBalancer54F22CF3"
      }
    },
    "TargetGroupArn": {
      "Description": "Target Group ARN",
      "Value": {
        "Ref": "YogaGoTargetGroupC2485A7A"
      },
      "Export": {
        "Name": "yoga-go-target-group-arn"
      }
    },
    "DnsSetupInstructions": {
      "Description": "DNS Setup Instructions",
      "Value": {
        "Fn::Join": [
          "",
          [
            "Point your domains (yogago.com, kavithayoga.com) to ",
            {
              "Fn::GetAtt": ["YogaGoLoadBalancer54F22CF3", "DNSName"]
            }
          ]
        ]
      }
    },
    "ExportsOutputRefYogaGoTargetGroupC2485A7A64B60202": {
      "Value": {
        "Ref": "YogaGoTargetGroupC2485A7A"
      },
      "Export": {
        "Name": "YogaGoLoadBalancerStack:ExportsOutputRefYogaGoTargetGroupC2485A7A64B60202"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  ["1", "2", "3", "4", "5"],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
