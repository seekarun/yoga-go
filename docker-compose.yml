version: '3.8'

services:
  # MongoDB database service
  mongodb:
    image: mongo:7.0
    container_name: yoga-go-mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: yoga-go
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
    networks:
      - yoga-go-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Next.js application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: yoga-go-app
    restart: unless-stopped
    ports:
      - '3111:3000'
    environment:
      NODE_ENV: production
      PORT: 3000
      # MongoDB connection
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/yoga-go?authSource=admin
      # Auth0 - override with .env file
      AUTH0_SECRET: ${AUTH0_SECRET}
      AUTH0_BASE_URL: ${AUTH0_BASE_URL:-http://localhost:3111}
      AUTH0_ISSUER_BASE_URL: ${AUTH0_ISSUER_BASE_URL}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      # Cloudflare - override with .env file
      CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID}
      CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN}
      CLOUDFLARE_IMAGES_ACCOUNT_HASH: ${CLOUDFLARE_IMAGES_ACCOUNT_HASH}
      # Stripe - override with .env file
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      # Razorpay - override with .env file
      NEXT_PUBLIC_RAZORPAY_KEY_ID: ${NEXT_PUBLIC_RAZORPAY_KEY_ID}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
      RAZORPAY_WEBHOOK_SECRET: ${RAZORPAY_WEBHOOK_SECRET}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - yoga-go-network
    healthcheck:
      test: ['CMD', 'node', '-e', "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local

networks:
  yoga-go-network:
    driver: bridge
